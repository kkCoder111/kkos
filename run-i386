#!/bin/bash

# Add cross-compiler to PATH
export PATH=$PATH:/opt/cross/i386-elf/bin

# Assemble the bootloader
nasm "i386/boot.asm" -f bin -o "build/boot.bin"

# Assemble the kernel entry point
nasm "i386/kernel_entry.asm" -f elf -o "build/kernel_entry.o"

# Assemble the ISR (Interrupt Service Routines)
nasm "i386/isr.asm" -f elf -o "build/isr.o"

# Compile the kernel C code
i386-elf-gcc -ffreestanding -m32 -g -c "i386/kernel.c" -o "build/kernel.o"

# Compile the VGA driver
i386-elf-gcc -ffreestanding -m32 -g -c "i386/vga.c" -o "build/vga.o"

# Link the kernel object files into a binary
i386-elf-ld -o "build/full_kernel.bin" -Ttext 0x1000 \
"build/kernel_entry.o" "build/kernel.o" "build/isr.o" "build/vga.o" --oformat binary

# Combine the bootloader and kernel into a single binary
cat "build/boot.bin" "build/full_kernel.bin" > "binaries/kkOS-i386.bin"

# Run the OS in QEMU
qemu-system-x86_64 -drive format=raw,file="binaries/kkOS-i386.bin",index=0,if=floppy,  -m 128M
